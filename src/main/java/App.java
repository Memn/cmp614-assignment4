import org.apache.log4j.Logger;
import org.apache.mahout.math.Matrix;
import org.apache.mahout.math.Vector;
import tr.edu.hacettepe.PageRank;
import tr.edu.hacettepe.structure.Graph;
import tr.edu.hacettepe.util.File2MatrixBuilder;
import tr.edu.hacettepe.util.VectorPrintUtil;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    private final static Logger LOGGER = Logger.getLogger(App.class);
    private static final String DATA_PATH = "C:\\Users\\MehmetEminMumcu\\Desktop\\memn\\hacettepe\\cmp614\\assignments\\assignment4\\cmp614-assignment4\\src\\main\\resources\\data";
    private static final String EXTRACTS_PATH = "C:\\Users\\MehmetEminMumcu\\Desktop\\memn\\hacettepe\\cmp614\\assignments\\assignment4\\cmp614-assignment4\\src\\main\\resources\\extracts";
    private static final String SENTENCES_FILENAME = "sents.txt";
    private static final String SIMILARITIES_FILENAME = "sims.mat";

    public static void main(String[] args) {

        try {
            for (Path path : Files.newDirectoryStream(Paths.get(DATA_PATH))) {
                // article directories
                // we need sents.txt and sims.mat files

                Path sentencesPath = Files.list(path).filter(p -> p.toFile().getName().equals(SENTENCES_FILENAME)).findFirst().get();
                Path sims = Files.list(path).filter(p -> p.toFile().getName().equals(SIMILARITIES_FILENAME)).findFirst().get();

                List<String> sentences = Files.readAllLines(sentencesPath);
                Matrix similarities = File2MatrixBuilder.build(sims, sentences.size());

                Graph graph = new Graph.Builder().numNeighbors(20).build(similarities, sentences.size());

                Vector ranks = new PageRank(graph).dumpingFactor(0.85).calculateRanks();
                LOGGER.debug("Final:" + VectorPrintUtil.toString(ranks));


            }
        } catch (IOException e) {
            e.printStackTrace();
        }


    }
}
